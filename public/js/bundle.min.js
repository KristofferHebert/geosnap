/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};

/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {

/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId])
/******/ 			return installedModules[moduleId].exports;

/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			exports: {},
/******/ 			id: moduleId,
/******/ 			loaded: false
/******/ 		};

/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);

/******/ 		// Flag the module as loaded
/******/ 		module.loaded = true;

/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}


/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;

/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;

/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";

/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(0);
/******/ })
/************************************************************************/
/******/ ([
/* 0 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var _react = __webpack_require__(1);

	var _react2 = _interopRequireDefault(_react);

	var _reactDom = __webpack_require__(2);

	var _reactDom2 = _interopRequireDefault(_reactDom);

	var _registerSW = __webpack_require__(3);

	var _registerSW2 = _interopRequireDefault(_registerSW);

	var _index = __webpack_require__(4);

	var _index2 = _interopRequireDefault(_index);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	// registerSW('/sw.js')

	_reactDom2.default.render(_react2.default.createElement(_index2.default, null), document.getElementById('react-mount'));

/***/ },
/* 1 */
/***/ function(module, exports) {

	module.exports = React;

/***/ },
/* 2 */
/***/ function(module, exports) {

	module.exports = ReactDOM;

/***/ },
/* 3 */
/***/ function(module, exports) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	// inspired by http://www.html5rocks.com/en/tutorials/service-worker/introduction/

	function registerSW(swpath) {
	  if (navigator.serviceWorker) {
	    navigator.serviceWorker.register(swpath).then(function (registration) {
	      console.log('Service worker registered on scope: ', registration.scope);
	    }).catch(function (err) {
	      console.log('Service worker failed', err);
	    });
	  } else {
	    console.log('Service work not supported in this browser');
	  }
	}

	exports.default = registerSW;

/***/ },
/* 4 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _react = __webpack_require__(1);

	var _react2 = _interopRequireDefault(_react);

	var _reactRouter = __webpack_require__(5);

	var _routes = __webpack_require__(6);

	var _routes2 = _interopRequireDefault(_routes);

	var _app = __webpack_require__(22);

	var _app2 = _interopRequireDefault(_app);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	var App = _react2.default.createClass({
	  displayName: 'App',
	  render: function render() {
	    return _react2.default.createElement(_reactRouter.Router, { routes: _routes2.default, history: _reactRouter.hashHistory });
	  }
	});

	// css outputs to style tag


	exports.default = App;

/***/ },
/* 5 */
/***/ function(module, exports) {

	module.exports = ReactRouter;

/***/ },
/* 6 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _react = __webpack_require__(1);

	var _react2 = _interopRequireDefault(_react);

	var _reactRouter = __webpack_require__(5);

	var _wrapper = __webpack_require__(7);

	var _wrapper2 = _interopRequireDefault(_wrapper);

	var _homepage = __webpack_require__(17);

	var _homepage2 = _interopRequireDefault(_homepage);

	var _snap = __webpack_require__(18);

	var _snap2 = _interopRequireDefault(_snap);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	var Routes = _react2.default.createElement(
	  _reactRouter.Route,
	  { path: '/', component: _wrapper2.default },
	  _react2.default.createElement(_reactRouter.IndexRoute, { name: '/', component: _homepage2.default }),
	  _react2.default.createElement(_reactRouter.Route, { path: '/snap', component: _snap2.default })
	);

	// Pages


	exports.default = Routes;

/***/ },
/* 7 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _react = __webpack_require__(1);

	var _react2 = _interopRequireDefault(_react);

	var _reactRouter = __webpack_require__(5);

	var _modal = __webpack_require__(8);

	var _modal2 = _interopRequireDefault(_modal);

	var _offline = __webpack_require__(9);

	var _offline2 = _interopRequireDefault(_offline);

	var _userform = __webpack_require__(12);

	var _userform2 = _interopRequireDefault(_userform);

	var _auth = __webpack_require__(16);

	var _auth2 = _interopRequireDefault(_auth);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	var Wrapper = _react2.default.createClass({
	  displayName: 'Wrapper',
	  getInitialState: function getInitialState() {
	    return {
	      isLoggedIn: true,
	      showModal: false
	    };
	  },
	  toggleModal: function toggleModal(e) {
	    if (e) {
	      e.preventDefault();
	    }
	    var updatedState = this.state;
	    updatedState.showModal = !updatedState.showModal;
	    this.setState(updatedState);
	  },
	  handleSignupSuccess: function handleSignupSuccess() {
	    this.setState({ isLoggedIn: true });
	  },
	  componentDidMount: function componentDidMount() {
	    if (this.isMounted()) {
	      this.setState({ isLoggedIn: _auth2.default.isLoggedIn() });
	    }
	  },
	  logout: function logout(e) {
	    e.preventDefault();
	    _auth2.default.logoutUser();
	    this.setState({ isLoggedIn: false });
	  },
	  renderSignUp: function renderSignUp(isLoggedIn) {
	    var signUp = _react2.default.createElement(
	      'li',
	      { className: 'active' },
	      _react2.default.createElement(
	        'a',
	        { href: '#', onClick: this.toggleModal },
	        'Sign in'
	      )
	    );

	    var signOut = _react2.default.createElement(
	      'li',
	      { className: 'active' },
	      _react2.default.createElement(
	        'a',
	        { href: '#', onClick: this.logout },
	        'Sign Out'
	      )
	    );

	    return isLoggedIn ? signOut : signUp;
	  },
	  render: function render() {
	    return _react2.default.createElement(
	      'section',
	      null,
	      _react2.default.createElement(
	        _modal2.default,
	        { showModal: this.state.showModal, toggleModal: this.toggleModal },
	        _react2.default.createElement(
	          _offline2.default,
	          null,
	          _react2.default.createElement(_userform2.default, { type: 'signin', endpoint: '/user/auth',
	            toggleModal: this.toggleModal,
	            handleSuccess: this.handleSignupSuccess,
	            successRedirect: '/#/snap' })
	        )
	      ),
	      _react2.default.createElement(
	        'nav',
	        { className: 'navbar navbar-default', role: 'banner' },
	        _react2.default.createElement(
	          'div',
	          { className: 'container' },
	          _react2.default.createElement(
	            'div',
	            { className: 'col-md-9 col-md-offset-2' },
	            _react2.default.createElement(
	              'div',
	              { className: 'navbar-header' },
	              _react2.default.createElement(
	                'a',
	                { href: '/', className: 'navbar-brand' },
	                'GeoSnap'
	              )
	            ),
	            _react2.default.createElement(
	              'ul',
	              { className: 'nav navbar-nav navbar-right', role: 'navigation' },
	              _react2.default.createElement(
	                'li',
	                null,
	                _react2.default.createElement(
	                  _reactRouter.Link,
	                  { activeClassName: 'active', to: '/' },
	                  'Feed'
	                )
	              ),
	              _react2.default.createElement(
	                'li',
	                null,
	                _react2.default.createElement(
	                  _reactRouter.Link,
	                  { activeClassName: 'active', to: '/snap' },
	                  'Snap'
	                )
	              ),
	              this.renderSignUp(this.state.isLoggedIn)
	            )
	          )
	        )
	      ),
	      _react2.default.createElement(
	        'section',
	        { className: 'container', role: 'section' },
	        _react2.default.createElement(
	          'section',
	          { className: 'row' },
	          _react2.default.createElement(
	            'div',
	            { className: 'col-md-9 col-md-offset-2' },
	            this.props.children
	          )
	        )
	      ),
	      _react2.default.createElement(
	        'footer',
	        { className: 'text-center' },
	        _react2.default.createElement(
	          'p',
	          null,
	          'GeoSnap - 2016'
	        )
	      )
	    );
	  }
	});

	exports.default = Wrapper;

/***/ },
/* 8 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _react = __webpack_require__(1);

	var _react2 = _interopRequireDefault(_react);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	var Modal = _react2.default.createClass({
	  displayName: 'Modal',
	  render: function render() {
	    var db = this.props.showModal ? 'block' : '';
	    return _react2.default.createElement(
	      'div',
	      { className: 'modal', tabindex: '-1', role: 'dialog', style: { display: db } },
	      _react2.default.createElement(
	        'div',
	        { className: 'modal-dialog' },
	        _react2.default.createElement(
	          'div',
	          { className: 'modal-content' },
	          _react2.default.createElement(
	            'div',
	            { className: 'modal-header' },
	            _react2.default.createElement(
	              'button',
	              { type: 'button', className: 'close', 'aria-label': 'Close', onClick: this.props.toggleModal },
	              _react2.default.createElement(
	                'span',
	                { 'aria-hidden': 'true' },
	                '×'
	              )
	            ),
	            _react2.default.createElement('h4', { className: 'modal-title' })
	          ),
	          _react2.default.createElement(
	            'div',
	            { className: 'modal-body' },
	            this.props.children
	          )
	        )
	      )
	    );
	  }
	});

	exports.default = Modal;

/***/ },
/* 9 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _react = __webpack_require__(1);

	var _react2 = _interopRequireDefault(_react);

	var _makeRequest = __webpack_require__(10);

	var _makeRequest2 = _interopRequireDefault(_makeRequest);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	var Offline = _react2.default.createClass({
	  displayName: 'Offline',
	  getDefaultProps: function getDefaultProps() {
	    return {
	      offlineMessage: 'This feature is online only.'
	    };
	  },
	  getInitialState: function getInitialState() {
	    return {
	      isOnline: true
	    };
	  },
	  componentDidMount: function componentDidMount() {
	    this.timer = setInterval(this.checkIfOnline, 3000);
	  },
	  componentWillUnmount: function componentWillUnmount() {
	    clearInterval(this.timer);
	  },
	  checkIfOnline: function checkIfOnline() {
	    this.setState({ isOnline: navigator.onLine });
	  },
	  renderOfflineMessage: function renderOfflineMessage(offlineMessage) {
	    var message = _react2.default.createElement(
	      'div',
	      { className: 'bg-info text-center' },
	      _react2.default.createElement(
	        'p',
	        null,
	        offlineMessage
	      )
	    );
	    return offlineMessage ? offlineMessage : null;
	  },
	  renderChildren: function renderChildren(children, isOnline, offlineMessage) {
	    var offline = this.renderOfflineMessage(offlineMessage);
	    return isOnline ? children : offline;
	  },
	  render: function render() {
	    return _react2.default.createElement(
	      'section',
	      null,
	      this.renderChildren(this.props.children, this.state.isOnline, this.props.offlineMessage)
	    );
	  }
	});

	exports.default = Offline;

/***/ },
/* 10 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	__webpack_require__(11);

	var defaultOptions = {
	  headers: {
	    'Accept': 'application/json'
	  }
	};

	function makeRequest(endpoint, userOptions) {
	  var options = Object.assign(defaultOptions, userOptions);
	  if (options.method === 'get' || options.method === 'GET') {
	    delete options.body;
	  }
	  return fetch(endpoint, options).then(function (response) {
	    return response.json();
	  }).then(function (data) {
	    return data;
	  }).catch(function (err) {
	    console.log('request failed', err);
	  });
	}

	exports.default = makeRequest;

/***/ },
/* 11 */
/***/ function(module, exports) {

	(function(self) {
	  'use strict';

	  if (self.fetch) {
	    return
	  }

	  var support = {
	    searchParams: 'URLSearchParams' in self,
	    iterable: 'Symbol' in self && 'iterator' in Symbol,
	    blob: 'FileReader' in self && 'Blob' in self && (function() {
	      try {
	        new Blob()
	        return true
	      } catch(e) {
	        return false
	      }
	    })(),
	    formData: 'FormData' in self,
	    arrayBuffer: 'ArrayBuffer' in self
	  }

	  function normalizeName(name) {
	    if (typeof name !== 'string') {
	      name = String(name)
	    }
	    if (/[^a-z0-9\-#$%&'*+.\^_`|~]/i.test(name)) {
	      throw new TypeError('Invalid character in header field name')
	    }
	    return name.toLowerCase()
	  }

	  function normalizeValue(value) {
	    if (typeof value !== 'string') {
	      value = String(value)
	    }
	    return value
	  }

	  // Build a destructive iterator for the value list
	  function iteratorFor(items) {
	    var iterator = {
	      next: function() {
	        var value = items.shift()
	        return {done: value === undefined, value: value}
	      }
	    }

	    if (support.iterable) {
	      iterator[Symbol.iterator] = function() {
	        return iterator
	      }
	    }

	    return iterator
	  }

	  function Headers(headers) {
	    this.map = {}

	    if (headers instanceof Headers) {
	      headers.forEach(function(value, name) {
	        this.append(name, value)
	      }, this)

	    } else if (headers) {
	      Object.getOwnPropertyNames(headers).forEach(function(name) {
	        this.append(name, headers[name])
	      }, this)
	    }
	  }

	  Headers.prototype.append = function(name, value) {
	    name = normalizeName(name)
	    value = normalizeValue(value)
	    var list = this.map[name]
	    if (!list) {
	      list = []
	      this.map[name] = list
	    }
	    list.push(value)
	  }

	  Headers.prototype['delete'] = function(name) {
	    delete this.map[normalizeName(name)]
	  }

	  Headers.prototype.get = function(name) {
	    var values = this.map[normalizeName(name)]
	    return values ? values[0] : null
	  }

	  Headers.prototype.getAll = function(name) {
	    return this.map[normalizeName(name)] || []
	  }

	  Headers.prototype.has = function(name) {
	    return this.map.hasOwnProperty(normalizeName(name))
	  }

	  Headers.prototype.set = function(name, value) {
	    this.map[normalizeName(name)] = [normalizeValue(value)]
	  }

	  Headers.prototype.forEach = function(callback, thisArg) {
	    Object.getOwnPropertyNames(this.map).forEach(function(name) {
	      this.map[name].forEach(function(value) {
	        callback.call(thisArg, value, name, this)
	      }, this)
	    }, this)
	  }

	  Headers.prototype.keys = function() {
	    var items = []
	    this.forEach(function(value, name) { items.push(name) })
	    return iteratorFor(items)
	  }

	  Headers.prototype.values = function() {
	    var items = []
	    this.forEach(function(value) { items.push(value) })
	    return iteratorFor(items)
	  }

	  Headers.prototype.entries = function() {
	    var items = []
	    this.forEach(function(value, name) { items.push([name, value]) })
	    return iteratorFor(items)
	  }

	  if (support.iterable) {
	    Headers.prototype[Symbol.iterator] = Headers.prototype.entries
	  }

	  function consumed(body) {
	    if (body.bodyUsed) {
	      return Promise.reject(new TypeError('Already read'))
	    }
	    body.bodyUsed = true
	  }

	  function fileReaderReady(reader) {
	    return new Promise(function(resolve, reject) {
	      reader.onload = function() {
	        resolve(reader.result)
	      }
	      reader.onerror = function() {
	        reject(reader.error)
	      }
	    })
	  }

	  function readBlobAsArrayBuffer(blob) {
	    var reader = new FileReader()
	    reader.readAsArrayBuffer(blob)
	    return fileReaderReady(reader)
	  }

	  function readBlobAsText(blob) {
	    var reader = new FileReader()
	    reader.readAsText(blob)
	    return fileReaderReady(reader)
	  }

	  function Body() {
	    this.bodyUsed = false

	    this._initBody = function(body) {
	      this._bodyInit = body
	      if (typeof body === 'string') {
	        this._bodyText = body
	      } else if (support.blob && Blob.prototype.isPrototypeOf(body)) {
	        this._bodyBlob = body
	      } else if (support.formData && FormData.prototype.isPrototypeOf(body)) {
	        this._bodyFormData = body
	      } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {
	        this._bodyText = body.toString()
	      } else if (!body) {
	        this._bodyText = ''
	      } else if (support.arrayBuffer && ArrayBuffer.prototype.isPrototypeOf(body)) {
	        // Only support ArrayBuffers for POST method.
	        // Receiving ArrayBuffers happens via Blobs, instead.
	      } else {
	        throw new Error('unsupported BodyInit type')
	      }

	      if (!this.headers.get('content-type')) {
	        if (typeof body === 'string') {
	          this.headers.set('content-type', 'text/plain;charset=UTF-8')
	        } else if (this._bodyBlob && this._bodyBlob.type) {
	          this.headers.set('content-type', this._bodyBlob.type)
	        } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {
	          this.headers.set('content-type', 'application/x-www-form-urlencoded;charset=UTF-8')
	        }
	      }
	    }

	    if (support.blob) {
	      this.blob = function() {
	        var rejected = consumed(this)
	        if (rejected) {
	          return rejected
	        }

	        if (this._bodyBlob) {
	          return Promise.resolve(this._bodyBlob)
	        } else if (this._bodyFormData) {
	          throw new Error('could not read FormData body as blob')
	        } else {
	          return Promise.resolve(new Blob([this._bodyText]))
	        }
	      }

	      this.arrayBuffer = function() {
	        return this.blob().then(readBlobAsArrayBuffer)
	      }

	      this.text = function() {
	        var rejected = consumed(this)
	        if (rejected) {
	          return rejected
	        }

	        if (this._bodyBlob) {
	          return readBlobAsText(this._bodyBlob)
	        } else if (this._bodyFormData) {
	          throw new Error('could not read FormData body as text')
	        } else {
	          return Promise.resolve(this._bodyText)
	        }
	      }
	    } else {
	      this.text = function() {
	        var rejected = consumed(this)
	        return rejected ? rejected : Promise.resolve(this._bodyText)
	      }
	    }

	    if (support.formData) {
	      this.formData = function() {
	        return this.text().then(decode)
	      }
	    }

	    this.json = function() {
	      return this.text().then(JSON.parse)
	    }

	    return this
	  }

	  // HTTP methods whose capitalization should be normalized
	  var methods = ['DELETE', 'GET', 'HEAD', 'OPTIONS', 'POST', 'PUT']

	  function normalizeMethod(method) {
	    var upcased = method.toUpperCase()
	    return (methods.indexOf(upcased) > -1) ? upcased : method
	  }

	  function Request(input, options) {
	    options = options || {}
	    var body = options.body
	    if (Request.prototype.isPrototypeOf(input)) {
	      if (input.bodyUsed) {
	        throw new TypeError('Already read')
	      }
	      this.url = input.url
	      this.credentials = input.credentials
	      if (!options.headers) {
	        this.headers = new Headers(input.headers)
	      }
	      this.method = input.method
	      this.mode = input.mode
	      if (!body) {
	        body = input._bodyInit
	        input.bodyUsed = true
	      }
	    } else {
	      this.url = input
	    }

	    this.credentials = options.credentials || this.credentials || 'omit'
	    if (options.headers || !this.headers) {
	      this.headers = new Headers(options.headers)
	    }
	    this.method = normalizeMethod(options.method || this.method || 'GET')
	    this.mode = options.mode || this.mode || null
	    this.referrer = null

	    if ((this.method === 'GET' || this.method === 'HEAD') && body) {
	      throw new TypeError('Body not allowed for GET or HEAD requests')
	    }
	    this._initBody(body)
	  }

	  Request.prototype.clone = function() {
	    return new Request(this)
	  }

	  function decode(body) {
	    var form = new FormData()
	    body.trim().split('&').forEach(function(bytes) {
	      if (bytes) {
	        var split = bytes.split('=')
	        var name = split.shift().replace(/\+/g, ' ')
	        var value = split.join('=').replace(/\+/g, ' ')
	        form.append(decodeURIComponent(name), decodeURIComponent(value))
	      }
	    })
	    return form
	  }

	  function headers(xhr) {
	    var head = new Headers()
	    var pairs = (xhr.getAllResponseHeaders() || '').trim().split('\n')
	    pairs.forEach(function(header) {
	      var split = header.trim().split(':')
	      var key = split.shift().trim()
	      var value = split.join(':').trim()
	      head.append(key, value)
	    })
	    return head
	  }

	  Body.call(Request.prototype)

	  function Response(bodyInit, options) {
	    if (!options) {
	      options = {}
	    }

	    this.type = 'default'
	    this.status = options.status
	    this.ok = this.status >= 200 && this.status < 300
	    this.statusText = options.statusText
	    this.headers = options.headers instanceof Headers ? options.headers : new Headers(options.headers)
	    this.url = options.url || ''
	    this._initBody(bodyInit)
	  }

	  Body.call(Response.prototype)

	  Response.prototype.clone = function() {
	    return new Response(this._bodyInit, {
	      status: this.status,
	      statusText: this.statusText,
	      headers: new Headers(this.headers),
	      url: this.url
	    })
	  }

	  Response.error = function() {
	    var response = new Response(null, {status: 0, statusText: ''})
	    response.type = 'error'
	    return response
	  }

	  var redirectStatuses = [301, 302, 303, 307, 308]

	  Response.redirect = function(url, status) {
	    if (redirectStatuses.indexOf(status) === -1) {
	      throw new RangeError('Invalid status code')
	    }

	    return new Response(null, {status: status, headers: {location: url}})
	  }

	  self.Headers = Headers
	  self.Request = Request
	  self.Response = Response

	  self.fetch = function(input, init) {
	    return new Promise(function(resolve, reject) {
	      var request
	      if (Request.prototype.isPrototypeOf(input) && !init) {
	        request = input
	      } else {
	        request = new Request(input, init)
	      }

	      var xhr = new XMLHttpRequest()

	      function responseURL() {
	        if ('responseURL' in xhr) {
	          return xhr.responseURL
	        }

	        // Avoid security warnings on getResponseHeader when not allowed by CORS
	        if (/^X-Request-URL:/m.test(xhr.getAllResponseHeaders())) {
	          return xhr.getResponseHeader('X-Request-URL')
	        }

	        return
	      }

	      xhr.onload = function() {
	        var options = {
	          status: xhr.status,
	          statusText: xhr.statusText,
	          headers: headers(xhr),
	          url: responseURL()
	        }
	        var body = 'response' in xhr ? xhr.response : xhr.responseText
	        resolve(new Response(body, options))
	      }

	      xhr.onerror = function() {
	        reject(new TypeError('Network request failed'))
	      }

	      xhr.ontimeout = function() {
	        reject(new TypeError('Network request failed'))
	      }

	      xhr.open(request.method, request.url, true)

	      if (request.credentials === 'include') {
	        xhr.withCredentials = true
	      }

	      if ('responseType' in xhr && support.blob) {
	        xhr.responseType = 'blob'
	      }

	      request.headers.forEach(function(value, name) {
	        xhr.setRequestHeader(name, value)
	      })

	      xhr.send(typeof request._bodyInit === 'undefined' ? null : request._bodyInit)
	    })
	  }
	  self.fetch.polyfill = true
	})(typeof self !== 'undefined' ? self : this);


/***/ },
/* 12 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _react = __webpack_require__(1);

	var _react2 = _interopRequireDefault(_react);

	var _makerequest = __webpack_require__(13);

	var _makerequest2 = _interopRequireDefault(_makerequest);

	var _handleChange = __webpack_require__(14);

	var _handleChange2 = _interopRequireDefault(_handleChange);

	var _renderMessage = __webpack_require__(15);

	var _renderMessage2 = _interopRequireDefault(_renderMessage);

	var _auth = __webpack_require__(16);

	var _auth2 = _interopRequireDefault(_auth);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	var UserForm = _react2.default.createClass({
	  displayName: 'UserForm',

	  renderMessage: _renderMessage2.default,
	  handleChange: _handleChange2.default,
	  getInitialState: function getInitialState() {
	    return {
	      form: {
	        name: '',
	        email: '',
	        password: ''
	      },
	      label: this.props.type === 'signup' ? 'Sign up' : 'Sign in',
	      message: {
	        value: '',
	        className: ''
	      }
	    };
	  },
	  resetForm: function resetForm() {
	    this.setState({
	      form: {
	        name: '',
	        email: '',
	        password: ''
	      },
	      label: this.props.type === 'signup' ? 'Sign up' : 'Sign in',
	      message: {
	        value: '',
	        className: ''
	      }
	    });
	  },
	  renderNameInput: function renderNameInput(type) {
	    var nameInput = _react2.default.createElement(
	      'div',
	      { className: 'form-group' },
	      _react2.default.createElement(
	        'label',
	        { className: 'sr-only', 'for': 'input' },
	        'Name'
	      ),
	      _react2.default.createElement('input', { type: 'name', className: 'form-control', id: 'name',
	        value: this.state.form.name, placeholder: 'Name', onChange: this.handleChange('name', 'form'), required: true })
	    );
	    return type === 'signup' ? nameInput : null;
	  },
	  renderHeader: function renderHeader(type) {
	    var title = type === 'signup' ? 'Sign up' : 'Sign in';
	    return _react2.default.createElement(
	      'h2',
	      null,
	      title
	    );
	  },
	  handleSubmit: function handleSubmit(e) {
	    var _this = this;

	    e.preventDefault();
	    var options = {
	      headers: {
	        'Accept': 'application/json',
	        'Content-Type': 'application/json'
	      },
	      method: 'POST',
	      body: JSON.stringify(this.state.form)
	    };

	    var self = this;

	    (0, _makerequest2.default)(this.props.endpoint, options).then(function (response) {
	      if (response.err) {
	        if (response.err.code === 11000) {
	          return self.setState({
	            message: {
	              value: 'Email already exists',
	              className: 'padding bg-danger'
	            }
	          });
	        }
	      }

	      if (!response.success) {
	        return self.setState({
	          message: {
	            value: response.message,
	            className: 'padding bg-danger'
	          }
	        });
	      }

	      if (response.success) {

	        _auth2.default.setUser(response.data.token, response.data._id);
	        self.setState({
	          message: {
	            value: _this.props.type === 'signup' ? 'Successfully signed up' : 'Signing in...',
	            className: 'padding bg-success'
	          }
	        });
	        if (self.props.toggleModal) {
	          self.props.toggleModal();
	        }
	        if (self.props.handleSuccess) {
	          self.props.handleSuccess();
	        }
	        if (self.props.successRedirect) {
	          self.resetForm();
	          window.location = self.props.successRedirect;
	        } else {
	          self.resetForm();
	        }
	      }
	    }).catch(function (err) {
	      console.log(err);
	    });
	  },
	  renderForm: function renderForm(type) {
	    return _react2.default.createElement(
	      'div',
	      null,
	      _react2.default.createElement(
	        'div',
	        { className: 'form-group' },
	        this.renderHeader(this.props.type),
	        _react2.default.createElement(
	          'label',
	          { className: 'sr-only', 'for': 'email' },
	          'Email address'
	        ),
	        _react2.default.createElement('input', { type: 'email', className: 'form-control', id: 'email',
	          value: this.state.form.email, placeholder: 'Email', onChange: this.handleChange('email', 'form'), required: true })
	      ),
	      this.renderNameInput(type),
	      _react2.default.createElement(
	        'div',
	        { className: 'form-group' },
	        _react2.default.createElement(
	          'label',
	          { className: 'sr-only', 'for': 'password' },
	          'Password'
	        ),
	        _react2.default.createElement('input', { type: 'password', className: 'form-control', id: 'password',
	          value: this.state.form.password, placeholder: 'Password', onChange: this.handleChange('password', 'form'), required: true })
	      ),
	      _react2.default.createElement(
	        'div',
	        { className: 'checkbox' },
	        _react2.default.createElement(
	          'button',
	          { type: 'submit', className: 'btn btn-primary' },
	          this.state.label
	        )
	      )
	    );
	  },
	  render: function render() {
	    return _react2.default.createElement(
	      'form',
	      { onSubmit: this.handleSubmit },
	      this.renderForm(this.props.type),
	      this.renderMessage(this.state.message)
	    );
	  }
	});

	exports.default = UserForm;

/***/ },
/* 13 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	__webpack_require__(11);

	var defaultOptions = {
	  headers: {
	    'Accept': 'application/json'
	  }
	};

	function makeRequest(endpoint, userOptions) {
	  var options = Object.assign(defaultOptions, userOptions);
	  if (options.method === 'get' || options.method === 'GET') {
	    delete options.body;
	  }
	  return fetch(endpoint, options).then(function (response) {
	    return response.json();
	  }).then(function (data) {
	    return data;
	  }).catch(function (err) {
	    console.log('request failed', err);
	  });
	}

	exports.default = makeRequest;

/***/ },
/* 14 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _react = __webpack_require__(1);

	var _react2 = _interopRequireDefault(_react);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function handleChange(stateAttribute, objectPrefix, cbs) {
	  var _this = this;

	  return function (e) {
	    e.preventDefault();
	    var updatedState = _this.state;
	    var value = e.target.value;

	    if (objectPrefix) {
	      updatedState[objectPrefix][stateAttribute] = value;
	    } else {
	      updatedState[stateAttribute] = value;
	    }

	    _this.setState(updatedState);

	    // if callbacks exists, itterate call callback
	    if (cbs) {
	      cbs.forEach(function (cb) {
	        cb(value);
	      });
	    }
	  };
	}

	exports.default = handleChange;

/***/ },
/* 15 */
/***/ function(module, exports) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	function renderMessage(message) {
	  if (message.value === '') {
	    return null;
	  }
	  return React.createElement(
	    'div',
	    { className: message.className },
	    message.value
	  );
	}

	exports.default = renderMessage;

/***/ },
/* 16 */
/***/ function(module, exports) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	// Helper function to get current user after authenticating
	var Auth = {};
	// sets root for localStorage

	Auth._base = 'geosnap';

	Auth.setBase = function (base, id) {
	  Auth._base = base + '_' + id;
	  if (!localStorage[Auth._base]) {
	    localStorage[Auth._base] = '';
	  }

	  return Auth._base;
	};

	Auth.getBase = function (base) {
	  return Auth._base;
	};

	// Fetch user id
	Auth.getId = function () {
	  var user = Auth.getUser();
	  return user._id ? user._id : false;
	};

	// Fetch user token
	Auth.getToken = function () {
	  var user = Auth.getUser();
	  return user.token ? user.token : false;
	};

	// Fetch user data from localStorage
	Auth.getUser = function () {
	  var geosnap = 'geosnap_' + Auth.getCurrentUser();
	  var user = localStorage[geosnap];
	  return user ? JSON.parse(user) : false;
	};

	Auth.getUserById = function (id) {
	  var base = 'geosnap_' + id;
	  var user = localStorage[base];
	  return user ? user : false;
	};

	Auth.logoutUser = function () {
	  if (Auth.getUser()) {
	    delete localStorage['currentUser'];
	  }
	};

	// Used to populate localStorage[Auth._base].user with user data.
	Auth.setUser = function (token, id) {
	  var user = {
	    token: token,
	    _id: id
	  };

	  Auth.setBase('geosnap', id);
	  Auth.setCurrentUser(id);

	  localStorage[Auth._base] = JSON.stringify(user);
	  return user;
	};

	// Set Current User from localStorage
	Auth.setCurrentUser = function (id) {
	  return localStorage['currentUser'] = id;
	};

	Auth.getCurrentUser = function () {
	  var user = localStorage['currentUser'];
	  return user ? user : false;
	};
	// Check if user is logged in
	Auth.isLoggedIn = function () {
	  return Auth.getCurrentUser() ? true : false;
	};

	window.Auth = Auth;

	exports.default = Auth;

/***/ },
/* 17 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _react = __webpack_require__(1);

	var _react2 = _interopRequireDefault(_react);

	var _makeRequest = __webpack_require__(10);

	var _makeRequest2 = _interopRequireDefault(_makeRequest);

	var _userform = __webpack_require__(12);

	var _userform2 = _interopRequireDefault(_userform);

	var _snaplist = __webpack_require__(26);

	var _snaplist2 = _interopRequireDefault(_snaplist);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	var HomePage = _react2.default.createClass({
	  displayName: 'HomePage',
	  render: function render() {
	    return _react2.default.createElement(
	      'section',
	      null,
	      _react2.default.createElement(
	        'h1',
	        null,
	        'Feed'
	      ),
	      _react2.default.createElement(_snaplist2.default, null),
	      _react2.default.createElement(_userform2.default, { type: 'signup', endpoint: '/user', successRedirect: '/#/snap' })
	    );
	  }
	});

	exports.default = HomePage;

/***/ },
/* 18 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _react = __webpack_require__(1);

	var _react2 = _interopRequireDefault(_react);

	var _webcamcanvas = __webpack_require__(19);

	var _webcamcanvas2 = _interopRequireDefault(_webcamcanvas);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	var SnapHomepage = _react2.default.createClass({
	  displayName: 'SnapHomepage',
	  render: function render() {
	    return _react2.default.createElement(
	      'section',
	      null,
	      _react2.default.createElement(
	        'h1',
	        null,
	        'Snap'
	      ),
	      _react2.default.createElement(_webcamcanvas2.default, null)
	    );
	  }
	});

	exports.default = SnapHomepage;

/***/ },
/* 19 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _react = __webpack_require__(1);

	var _react2 = _interopRequireDefault(_react);

	var _handleChange = __webpack_require__(14);

	var _handleChange2 = _interopRequireDefault(_handleChange);

	var _makeRequest = __webpack_require__(10);

	var _makeRequest2 = _interopRequireDefault(_makeRequest);

	var _auth = __webpack_require__(16);

	var _auth2 = _interopRequireDefault(_auth);

	var _getUserMedia = __webpack_require__(20);

	var _getUserMedia2 = _interopRequireDefault(_getUserMedia);

	var _geolocate = __webpack_require__(21);

	var _geolocate2 = _interopRequireDefault(_geolocate);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	// some inspiration from http://www.purplesquirrels.com.au/2013/08/webcam-to-canvas-or-data-uri-with-html5-and-javascript/

	var WebCamCanvas = _react2.default.createClass({
	  displayName: 'WebCamCanvas',
	  getInitialState: function getInitialState() {
	    return {
	      caption: '',
	      geo: {
	        value: '',
	        timestamp: '',
	        placeholder: 'GeoLocate (required)',
	        loading: false
	      }
	    };
	  },

	  getUserMedia: _getUserMedia2.default,
	  handleChange: _handleChange2.default,
	  getCurrentPosition: function getCurrentPosition(options) {
	    var self = this;
	    var defaultOptions = {
	      enableHighAccuracy: true,
	      timeout: 5000,
	      maximumAge: 0
	    };

	    var opts = options || defaultOptions;

	    if (navigator.geolocation) {
	      self.setState({
	        geo: {
	          placeholder: 'Loading...',
	          loading: true
	        }
	      });
	      navigator.geolocation.getCurrentPosition(function (result) {
	        self.setState({
	          geo: {
	            value: result.coords.latitude.toFixed(2) + ', ' + result.coords.longitude.toFixed(2),
	            timestamp: result.timestamp,
	            loading: false
	          }
	        });
	      }, function (err) {
	        console.log(err);
	      }, opts);
	    } else {
	      console.log('Geolocation is unavailable for this browser.');
	    }
	  },
	  getGeoCoordinates: function getGeoCoordinates(e) {
	    e.preventDefault();
	    this.getCurrentPosition();
	  },
	  componentDidMount: function componentDidMount() {
	    this.renderVideo();
	  },
	  renderVideo: function renderVideo() {
	    this.getUserMedia({ video: true }, this.handleVideo, function (e) {
	      console.log('video error', e);
	    });
	  },
	  handleSubmit: function handleSubmit(e) {
	    e.preventDefault();
	    var canvas = this.refs.webcamcanvas;
	    var image = canvas.toDataURL('image/jpeg', 0.5);
	    var geo = this.state.geo;

	    var coords = geo.value.split(',');

	    var postRequest = {
	      image: image,
	      timestamp: geo.timestamp,
	      coordinates: {
	        lat: coords[0],
	        long: coords[1]
	      },
	      owner: _auth2.default.getCurrentUser()
	    };

	    var options = {
	      headers: {
	        'Accept': 'application/json',
	        'Content-Type': 'application/json'
	      },
	      method: 'POST',
	      body: JSON.stringify(postRequest)
	    };

	    (0, _makeRequest2.default)('/snap/upload', options).then(function (response) {
	      console.log(response);
	    }).catch(function (e) {
	      console.log(e);
	    });
	  },
	  handleVideo: function handleVideo(stream) {
	    var self = this;
	    var video = this.refs.video;
	    var canvas = this.refs.webcamcanvas;
	    var ctx = canvas.getContext('2d');
	    var box = canvas.getContext('2d');

	    var message = canvas.getContext('2d', { alpha: false });

	    video.src = window.URL.createObjectURL(stream);
	    video.play();

	    video.addEventListener('play', function () {
	      (function drawCanvas() {
	        if (!video.paused && !video.ended) {
	          ctx.drawImage(video, 0, 0);
	          var caption = self.state.caption;

	          if (caption !== '') {
	            var canvaswidth = canvas.width;
	            var canvasheight = canvas.height;

	            box.fillStyle = 'rgba(0,0,0,0.6)';
	            box.fillRect(0, canvasheight * 0.70, canvaswidth, 60);

	            message.font = '18pt Arial';
	            message.textBaseline = 'top';
	            message.fillStyle = '#FFF';
	            message.textAlign = 'center';
	            message.fillText(caption, canvaswidth * 0.5, canvasheight * 0.73);
	          }
	          setTimeout(drawCanvas, 1000 / 10);
	        }
	      })();
	    }, 0);
	  },
	  render: function render() {
	    return _react2.default.createElement(
	      'form',
	      { onSubmit: this.handleSubmit },
	      _react2.default.createElement('video', { ref: 'video', hidden: true }),
	      _react2.default.createElement(
	        'div',
	        { className: 'form-group' },
	        _react2.default.createElement('canvas', { ref: 'webcamcanvas', width: '640', height: '480', className: 'canvas' })
	      ),
	      _react2.default.createElement(
	        'div',
	        { className: 'form-group' },
	        _react2.default.createElement(_geolocate2.default, { geo: this.state.geo, getGeoCoordinates: this.getGeoCoordinates })
	      ),
	      _react2.default.createElement(
	        'div',
	        { className: 'form-group' },
	        _react2.default.createElement('textarea', { type: 'text', name: 'caption', value: this.state.caption, className: 'form-control',
	          placeholder: 'Caption (Max 50 characters)', maxLength: '50', onChange: this.handleChange('caption'), rows: '4', cols: '50' })
	      ),
	      _react2.default.createElement(
	        'div',
	        { className: 'form-group' },
	        _react2.default.createElement('input', { type: 'submit', className: 'btn btn-primary btn-block', value: 'Save' })
	      )
	    );
	  }
	});

	exports.default = WebCamCanvas;

/***/ },
/* 20 */
/***/ function(module, exports) {

	"use strict";

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	var getUserMedia = (navigator.getUserMedia || navigator.webkitGetUserMedia || navigator.mozGetUserMedia || navigator.msGetUserMedia || navigator.oGetUserMedia).bind(navigator);

	exports.default = getUserMedia;

/***/ },
/* 21 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _react = __webpack_require__(1);

	var _react2 = _interopRequireDefault(_react);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	var GeoLocateInput = _react2.default.createClass({
	  displayName: 'GeoLocateInput',
	  getDefaultProps: function getDefaultProps() {
	    return {
	      geo: {
	        value: '',
	        timestamp: '',
	        placeholder: 'GeoLocate (required)',
	        loading: false
	      }
	    };
	  },
	  render: function render() {
	    var classes = this.props.geo.loading ? 'form-control geo-locate loading' : 'form-control geo-locate';
	    return _react2.default.createElement('input', { type: 'text', name: 'geo', ref: 'geo', value: this.props.geo.value,
	      className: classes, placeholder: this.props.geo.placeholder,
	      onFocus: this.props.getGeoCoordinates,
	      disabled: this.props.geo.value !== '' && this.props.geo.loading === false,
	      required: true });
	  }
	});

	exports.default = GeoLocateInput;

/***/ },
/* 22 */
/***/ function(module, exports, __webpack_require__) {

	// style-loader: Adds some css to the DOM by adding a <style> tag

	// load the styles
	var content = __webpack_require__(23);
	if(typeof content === 'string') content = [[module.id, content, '']];
	// add the styles to the DOM
	var update = __webpack_require__(25)(content, {});
	if(content.locals) module.exports = content.locals;
	// Hot Module Replacement
	if(false) {
		// When the styles change, update the <style> tags
		if(!content.locals) {
			module.hot.accept("!!./../../../node_modules/css-loader/index.js!./app.css", function() {
				var newContent = require("!!./../../../node_modules/css-loader/index.js!./app.css");
				if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];
				update(newContent);
			});
		}
		// When the module is disposed, remove the <style> tags
		module.hot.dispose(function() { update(); });
	}

/***/ },
/* 23 */
/***/ function(module, exports, __webpack_require__) {

	exports = module.exports = __webpack_require__(24)();
	// imports


	// module
	exports.push([module.id, ".canvas {\n  border: 1px solid #e7e7e7;\n  display: block;\n  width: 100%;\n}\n\n.loading {\n  background: url('/images/loading.svg') top 2px right 2px no-repeat #ddd;\n  background-size: 4%;\n}\n\n.padding {\n  padding: 1em;\n}\n\n.modal {\n    background: rgba(0,0,0,.7);\n}\n", ""]);

	// exports


/***/ },
/* 24 */
/***/ function(module, exports) {

	/*
		MIT License http://www.opensource.org/licenses/mit-license.php
		Author Tobias Koppers @sokra
	*/
	// css base code, injected by the css-loader
	module.exports = function() {
		var list = [];

		// return the list of modules as css string
		list.toString = function toString() {
			var result = [];
			for(var i = 0; i < this.length; i++) {
				var item = this[i];
				if(item[2]) {
					result.push("@media " + item[2] + "{" + item[1] + "}");
				} else {
					result.push(item[1]);
				}
			}
			return result.join("");
		};

		// import a list of modules into the list
		list.i = function(modules, mediaQuery) {
			if(typeof modules === "string")
				modules = [[null, modules, ""]];
			var alreadyImportedModules = {};
			for(var i = 0; i < this.length; i++) {
				var id = this[i][0];
				if(typeof id === "number")
					alreadyImportedModules[id] = true;
			}
			for(i = 0; i < modules.length; i++) {
				var item = modules[i];
				// skip already imported module
				// this implementation is not 100% perfect for weird media query combinations
				//  when a module is imported multiple times with different media queries.
				//  I hope this will never occur (Hey this way we have smaller bundles)
				if(typeof item[0] !== "number" || !alreadyImportedModules[item[0]]) {
					if(mediaQuery && !item[2]) {
						item[2] = mediaQuery;
					} else if(mediaQuery) {
						item[2] = "(" + item[2] + ") and (" + mediaQuery + ")";
					}
					list.push(item);
				}
			}
		};
		return list;
	};


/***/ },
/* 25 */
/***/ function(module, exports, __webpack_require__) {

	/*
		MIT License http://www.opensource.org/licenses/mit-license.php
		Author Tobias Koppers @sokra
	*/
	var stylesInDom = {},
		memoize = function(fn) {
			var memo;
			return function () {
				if (typeof memo === "undefined") memo = fn.apply(this, arguments);
				return memo;
			};
		},
		isOldIE = memoize(function() {
			return /msie [6-9]\b/.test(window.navigator.userAgent.toLowerCase());
		}),
		getHeadElement = memoize(function () {
			return document.head || document.getElementsByTagName("head")[0];
		}),
		singletonElement = null,
		singletonCounter = 0,
		styleElementsInsertedAtTop = [];

	module.exports = function(list, options) {
		if(false) {
			if(typeof document !== "object") throw new Error("The style-loader cannot be used in a non-browser environment");
		}

		options = options || {};
		// Force single-tag solution on IE6-9, which has a hard limit on the # of <style>
		// tags it will allow on a page
		if (typeof options.singleton === "undefined") options.singleton = isOldIE();

		// By default, add <style> tags to the bottom of <head>.
		if (typeof options.insertAt === "undefined") options.insertAt = "bottom";

		var styles = listToStyles(list);
		addStylesToDom(styles, options);

		return function update(newList) {
			var mayRemove = [];
			for(var i = 0; i < styles.length; i++) {
				var item = styles[i];
				var domStyle = stylesInDom[item.id];
				domStyle.refs--;
				mayRemove.push(domStyle);
			}
			if(newList) {
				var newStyles = listToStyles(newList);
				addStylesToDom(newStyles, options);
			}
			for(var i = 0; i < mayRemove.length; i++) {
				var domStyle = mayRemove[i];
				if(domStyle.refs === 0) {
					for(var j = 0; j < domStyle.parts.length; j++)
						domStyle.parts[j]();
					delete stylesInDom[domStyle.id];
				}
			}
		};
	}

	function addStylesToDom(styles, options) {
		for(var i = 0; i < styles.length; i++) {
			var item = styles[i];
			var domStyle = stylesInDom[item.id];
			if(domStyle) {
				domStyle.refs++;
				for(var j = 0; j < domStyle.parts.length; j++) {
					domStyle.parts[j](item.parts[j]);
				}
				for(; j < item.parts.length; j++) {
					domStyle.parts.push(addStyle(item.parts[j], options));
				}
			} else {
				var parts = [];
				for(var j = 0; j < item.parts.length; j++) {
					parts.push(addStyle(item.parts[j], options));
				}
				stylesInDom[item.id] = {id: item.id, refs: 1, parts: parts};
			}
		}
	}

	function listToStyles(list) {
		var styles = [];
		var newStyles = {};
		for(var i = 0; i < list.length; i++) {
			var item = list[i];
			var id = item[0];
			var css = item[1];
			var media = item[2];
			var sourceMap = item[3];
			var part = {css: css, media: media, sourceMap: sourceMap};
			if(!newStyles[id])
				styles.push(newStyles[id] = {id: id, parts: [part]});
			else
				newStyles[id].parts.push(part);
		}
		return styles;
	}

	function insertStyleElement(options, styleElement) {
		var head = getHeadElement();
		var lastStyleElementInsertedAtTop = styleElementsInsertedAtTop[styleElementsInsertedAtTop.length - 1];
		if (options.insertAt === "top") {
			if(!lastStyleElementInsertedAtTop) {
				head.insertBefore(styleElement, head.firstChild);
			} else if(lastStyleElementInsertedAtTop.nextSibling) {
				head.insertBefore(styleElement, lastStyleElementInsertedAtTop.nextSibling);
			} else {
				head.appendChild(styleElement);
			}
			styleElementsInsertedAtTop.push(styleElement);
		} else if (options.insertAt === "bottom") {
			head.appendChild(styleElement);
		} else {
			throw new Error("Invalid value for parameter 'insertAt'. Must be 'top' or 'bottom'.");
		}
	}

	function removeStyleElement(styleElement) {
		styleElement.parentNode.removeChild(styleElement);
		var idx = styleElementsInsertedAtTop.indexOf(styleElement);
		if(idx >= 0) {
			styleElementsInsertedAtTop.splice(idx, 1);
		}
	}

	function createStyleElement(options) {
		var styleElement = document.createElement("style");
		styleElement.type = "text/css";
		insertStyleElement(options, styleElement);
		return styleElement;
	}

	function createLinkElement(options) {
		var linkElement = document.createElement("link");
		linkElement.rel = "stylesheet";
		insertStyleElement(options, linkElement);
		return linkElement;
	}

	function addStyle(obj, options) {
		var styleElement, update, remove;

		if (options.singleton) {
			var styleIndex = singletonCounter++;
			styleElement = singletonElement || (singletonElement = createStyleElement(options));
			update = applyToSingletonTag.bind(null, styleElement, styleIndex, false);
			remove = applyToSingletonTag.bind(null, styleElement, styleIndex, true);
		} else if(obj.sourceMap &&
			typeof URL === "function" &&
			typeof URL.createObjectURL === "function" &&
			typeof URL.revokeObjectURL === "function" &&
			typeof Blob === "function" &&
			typeof btoa === "function") {
			styleElement = createLinkElement(options);
			update = updateLink.bind(null, styleElement);
			remove = function() {
				removeStyleElement(styleElement);
				if(styleElement.href)
					URL.revokeObjectURL(styleElement.href);
			};
		} else {
			styleElement = createStyleElement(options);
			update = applyToTag.bind(null, styleElement);
			remove = function() {
				removeStyleElement(styleElement);
			};
		}

		update(obj);

		return function updateStyle(newObj) {
			if(newObj) {
				if(newObj.css === obj.css && newObj.media === obj.media && newObj.sourceMap === obj.sourceMap)
					return;
				update(obj = newObj);
			} else {
				remove();
			}
		};
	}

	var replaceText = (function () {
		var textStore = [];

		return function (index, replacement) {
			textStore[index] = replacement;
			return textStore.filter(Boolean).join('\n');
		};
	})();

	function applyToSingletonTag(styleElement, index, remove, obj) {
		var css = remove ? "" : obj.css;

		if (styleElement.styleSheet) {
			styleElement.styleSheet.cssText = replaceText(index, css);
		} else {
			var cssNode = document.createTextNode(css);
			var childNodes = styleElement.childNodes;
			if (childNodes[index]) styleElement.removeChild(childNodes[index]);
			if (childNodes.length) {
				styleElement.insertBefore(cssNode, childNodes[index]);
			} else {
				styleElement.appendChild(cssNode);
			}
		}
	}

	function applyToTag(styleElement, obj) {
		var css = obj.css;
		var media = obj.media;

		if(media) {
			styleElement.setAttribute("media", media)
		}

		if(styleElement.styleSheet) {
			styleElement.styleSheet.cssText = css;
		} else {
			while(styleElement.firstChild) {
				styleElement.removeChild(styleElement.firstChild);
			}
			styleElement.appendChild(document.createTextNode(css));
		}
	}

	function updateLink(linkElement, obj) {
		var css = obj.css;
		var sourceMap = obj.sourceMap;

		if(sourceMap) {
			// http://stackoverflow.com/a/26603875
			css += "\n/*# sourceMappingURL=data:application/json;base64," + btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))) + " */";
		}

		var blob = new Blob([css], { type: "text/css" });

		var oldSrc = linkElement.href;

		linkElement.href = URL.createObjectURL(blob);

		if(oldSrc)
			URL.revokeObjectURL(oldSrc);
	}


/***/ },
/* 26 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _react = __webpack_require__(1);

	var _react2 = _interopRequireDefault(_react);

	var _makerequest = __webpack_require__(13);

	var _makerequest2 = _interopRequireDefault(_makerequest);

	var _modal = __webpack_require__(8);

	var _modal2 = _interopRequireDefault(_modal);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	var SnapList = _react2.default.createClass({
	  displayName: 'SnapList',
	  getInitialState: function getInitialState() {
	    return {
	      snaps: [],
	      showModal: false,
	      currentImage: false
	    };
	  },
	  componentDidMount: function componentDidMount() {
	    var self = this;
	    (0, _makerequest2.default)('/snap', {}).then(function (response) {
	      if (self.isMounted()) {
	        self.setState({
	          snaps: response.data
	        });
	      }
	    }).catch(function (err) {
	      console.log(err);
	    });
	  },
	  closeModal: function closeModal(e) {
	    if (e) {
	      e.preventDefault();
	    }
	    this.setState({
	      showModal: false
	    });
	  },
	  openModal: function openModal(index) {
	    var _this = this;

	    return function (e) {
	      e.preventDefault();
	      _this.setState({
	        showModal: true,
	        currentImage: index
	      });
	    };
	  },
	  getCurrentImage: function getCurrentImage(currentImage, snaps) {
	    if (currentImage === false || snaps.length === 0) {
	      return null;
	    }

	    var current = snaps[currentImage].filename;

	    return _react2.default.createElement(
	      'a',
	      { href: '#', onClick: this.closeModal },
	      _react2.default.createElement('img', { src: '/images/upload/' + current, className: 'img-responsive' })
	    );
	  },
	  renderSnapList: function renderSnapList(snaps) {
	    var _this2 = this;

	    if (snaps.length === 0) {
	      return null;
	    }
	    return snaps.map(function (snap, i) {
	      return _react2.default.createElement(
	        'li',
	        { key: Date.now() + i, className: 'col-sm-4' },
	        _react2.default.createElement(
	          'a',
	          { href: '#', onClick: _this2.openModal(i) },
	          _react2.default.createElement('img', { src: '/images/upload/' + snap.filename, className: 'img-responsive' })
	        )
	      );
	    });
	  },
	  render: function render() {
	    return _react2.default.createElement(
	      'section',
	      null,
	      _react2.default.createElement(
	        'ul',
	        { className: 'list-inline row' },
	        this.renderSnapList(this.state.snaps)
	      ),
	      _react2.default.createElement(
	        _modal2.default,
	        { showModal: this.state.showModal, toggleModal: this.closeModal },
	        this.getCurrentImage(this.state.currentImage, this.state.snaps)
	      )
	    );
	  }
	});

	exports.default = SnapList;

/***/ }
/******/ ]);